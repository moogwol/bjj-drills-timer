// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NumberPicker renders correctly 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "justifyContent": "center",
    }
  }
>
  <Text
    style={
      [
        {
          "textAlign": "left",
        },
        {
          "color": "rgba(28, 27, 31, 1)",
          "writingDirection": "ltr",
        },
        [
          {
            "fontFamily": "System",
            "fontSize": 24,
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 32,
          },
          {
            "margin": 10,
          },
        ],
      ]
    }
  >
    Test
  </Text>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 23,
          "height": 46,
          "margin": 6,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
          "width": 46,
        }
      }
      testID="decrement-container-outer-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderColor": "rgba(121, 116, 126, 1)",
            "borderRadius": 23,
            "borderWidth": 0,
            "elevation": 0,
            "flex": 1,
            "overflow": "hidden",
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="decrement-container"
      >
        <View
          accessibilityComponentType="button"
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityTraits="button"
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          centered={true}
          collapsable={false}
          focusable={true}
          hitSlop={
            {
              "bottom": 6,
              "left": 6,
              "right": 6,
              "top": 6,
            }
          }
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              [
                {
                  "alignItems": "center",
                  "flexGrow": 1,
                  "justifyContent": "center",
                },
                {
                  "borderRadius": 23,
                },
              ],
            ]
          }
          testID="decrement"
        >
          <Text />
        </View>
      </View>
    </View>
    <Text
      style={
        [
          {
            "textAlign": "left",
          },
          {
            "color": "rgba(28, 27, 31, 1)",
            "writingDirection": "ltr",
          },
          [
            {
              "fontFamily": "System",
              "fontSize": 36,
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 44,
            },
            undefined,
          ],
        ]
      }
    >
      1
    </Text>
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 20,
          "height": 40,
          "margin": 6,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
          "width": 40,
        }
      }
      testID="increment-container-outer-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderColor": "rgba(121, 116, 126, 1)",
            "borderRadius": 20,
            "borderWidth": 0,
            "elevation": 0,
            "flex": 1,
            "overflow": "hidden",
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="increment-container"
      >
        <View
          accessibilityComponentType="button"
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityTraits="button"
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          centered={true}
          collapsable={false}
          focusable={true}
          hitSlop={
            {
              "bottom": 6,
              "left": 6,
              "right": 6,
              "top": 6,
            }
          }
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              [
                {
                  "alignItems": "center",
                  "flexGrow": 1,
                  "justifyContent": "center",
                },
                {
                  "borderRadius": 20,
                },
              ],
            ]
          }
          testID="increment"
        >
          <Text />
        </View>
      </View>
    </View>
  </View>
</View>
`;
